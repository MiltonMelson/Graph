Sun 06 Feb 2022 07:38:29 PM PST
Linux csslab5h 4.19.0-18-amd64 #1 SMP Debian 4.19.208-1 (2021-09-29) x86_64 GNU/Linux
uid=1122277(buddymel) gid=2121122277(buddymel) groups=2121122277(buddymel),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
testGraph0DFS
ABC
testGraph0BFS
ABC
testGraph0Dijkstra
testGraph0NotDirected
BACBACtestGraph1
ABCDEFGH
Done!
=====================================================
3. clang-tidy warnings are fixed
=====================================================
23813 warnings generated.
39441 warnings generated.
50295 warnings generated.
Suppressed 50299 warnings (50295 in non-user code, 4 NOLINT).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./graph.cpp
Running clang-format on ./graphtest.cpp
Running clang-format on ./main.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==48452== Memcheck, a memory error detector
==48452== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==48452== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==48452== Command: ./a.out
==48452== Parent PID: 48263
==48452== 
==48452== 
==48452== HEAP SUMMARY:
==48452==     in use at exit: 0 bytes in 0 blocks
==48452==   total heap usage: 568 allocs, 568 frees, 169,154 bytes allocated
==48452== 
==48452== All heap blocks were freed -- no leaks are possible
==48452== 
==48452== For counts of detected and suppressed errors, rerun with: -v
==48452== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
File '/home/NETID/buddymel/GraphProject/2022win343d-graph-MiltonMelson/2022win343d-graph-MiltonMelson/graph.cpp':
Name                                                                                                                                                                                                                                                                                                          Regions    Miss   Cover     Lines    Miss   Cover
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Graph::Graph(bool)                                                                                                                                                                                                                                                                                                  1       0 100.00%         4       0 100.00%
Graph::~Graph()                                                                                                                                                                                                                                                                                                     1       0 100.00%         1       0 100.00%
Graph::verticesSize() const                                                                                                                                                                                                                                                                                         1       0 100.00%         1       0 100.00%
Graph::edgesSize() const                                                                                                                                                                                                                                                                                            1       0 100.00%         1       0 100.00%
Graph::vertexDegree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const                                                                                                                                                                                                   5       0 100.00%        11       0 100.00%
Graph::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                                  4       0 100.00%        13       0 100.00%
Graph::contains(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const                                                                                                                                                                                                       5       0 100.00%         8       0 100.00%
Graph::getEdgesAsString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const                                                                                                                                                                                               7       0 100.00%        25       0 100.00%
Graph::connect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)                                                                                                                14       0 100.00%        29       0 100.00%
Graph::disconnect(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                  21       8  61.90%        28       9  67.86%
Graph::dfs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&))                                                                                                               11       0 100.00%        43       0 100.00%
Graph::bfs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&))                                                                                                               11       1  90.91%        38       2  94.74%
Graph::dijkstra(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const                                                                                                                                                                                                      11       0 100.00%        45       0 100.00%
Graph::mstPrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)) const        15       0 100.00%        41       0 100.00%
Graph::readFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                             7       1  85.71%        20       3  85.00%
Graph::checkIfEdgeExist(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const                                                                                                       8       0 100.00%        12       0 100.00%
graph.cpp:_ZZNK5Graph16getEdgesAsStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENK3$_0clERK4EdgeSB_                                                                                                                                                                                                  4       1  75.00%         6       2  66.67%
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                             127      11  91.34%       326      16  95.09%

File '/home/NETID/buddymel/GraphProject/2022win343d-graph-MiltonMelson/2022win343d-graph-MiltonMelson/graphtest.cpp':
Name                                                                                                                                                                                                                                                                                                          Regions    Miss   Cover     Lines    Miss   Cover
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
vertexPrinter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                                                                                                                               1       0 100.00%         1       0 100.00%
edgePrinter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)                                                                                                                    1       0 100.00%         3       0 100.00%
testGraphBasic()                                                                                                                                                                                                                                                                                                    1       0 100.00%        31       0 100.00%
testGraph0DFS()                                                                                                                                                                                                                                                                                                     4       1  75.00%        29       2  93.10%
testGraph0BFS()                                                                                                                                                                                                                                                                                                     4       1  75.00%        24       2  91.67%
testGraph0Dijkstra()                                                                                                                                                                                                                                                                                                4       1  75.00%        22       2  90.91%
testGraph0NotDirected()                                                                                                                                                                                                                                                                                             4       1  75.00%        62       2  96.77%
testGraph1()                                                                                                                                                                                                                                                                                                        4       1  75.00%        33       2  93.94%
testAll()                                                                                                                                                                                                                                                                                                           1       0 100.00%         8       0 100.00%
graphtest.cpp:_ZL10map2stringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiES5_RKSt3mapIT_T0_St4lessIS7_ESaISt4pairIKS7_S8_EEE                                                                                                                                                                              2       0 100.00%         7       0 100.00%
graphtest.cpp:_ZL10map2stringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ES5_RKSt3mapIT_T0_St4lessIS7_ESaISt4pairIKS7_S8_EEE                                                                                                                                                                            2       0 100.00%         7       0 100.00%
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                              28       5  82.14%       227      10  95.59%

File '/home/NETID/buddymel/GraphProject/2022win343d-graph-MiltonMelson/2022win343d-graph-MiltonMelson/main.cpp':
Name                                                                                                                                                                                                                                                                                                          Regions    Miss   Cover     Lines    Miss   Cover
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
main                                                                                                                                                                                                                                                                                                                1       0 100.00%         5       0 100.00%
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                                                                                                                               1       0 100.00%         5       0 100.00%
=====================================================
The lines below were never executed
=====================================================
   82|      0|          return edge1 < edge2;
   83|      0|        }
  143|      0|        if (v.getID() == to) {
  144|      0|          for (auto edge = v.edges.begin(); edge != v.edges.end(); edge++) {
  145|      0|            if (edge->getDestination() == from) {
  146|      0|              v.edges.erase(edge);
  147|      0|              break;
  148|      0|            }
  149|      0|          }
  150|      0|        }
  151|      0|      }
  207|      0|    return;
  208|      0|  }
  341|      0|    cerr << "Failed to open " << filename << endl;
  342|      0|    return false;
  343|      0|  }
   28|      0|  Edge() {
   29|      0|    destination = "";
   30|      0|    weight = 0;
   31|      0|  }
   36|      0|  void setDestination(string dest) { destination = move(dest); }
   37|      0|  void setWeight(int weight) { this->weight = weight; }
   42|      0|  bool operator<(const Edge &edge) const { return weight < edge.weight; }
   53|      0|  explicit Vertex(string id) { vertexID = move(id); }
   74|      0|    return;
   75|      0|  }
  104|      0|    return;
  105|      0|  }
  129|      0|    return;
  130|      0|  }
  153|      0|    return;
  154|      0|  }
  215|      0|    return;
  216|      0|  }
Sun 06 Feb 2022 07:39:04 PM PST
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
